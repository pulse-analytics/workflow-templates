name: Build Image, Deploy Production ECS

on:
  workflow_call:
    inputs:
        SERVICE_NAME:
          required: true
          type: string
        AWS_ACCOUNT_ID:
          required: true
          type: number
    secrets:
      NPM_TOKEN:
        required: false

env:
  REGISTRY: ghcr.io
  AWS_REGION: us-east-1

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    steps:

      - name: Checkout repository.
        uses: actions/checkout@v3

      - name: Cache Docker layers.
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx.
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Configure NPM.
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          echo "@pulse-analytics:registry=https://npm.pkg.github.com" >> .npmrc

      - name: Authenticate into GitHub Container Registry.
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version tag.
        id: tag
        if: github.ref_type == 'tag'
        uses: dawidd6/action-get-tag@v1

      - name: Tag version and push.
        id: docker_build_version
        if: github.ref_type == 'tag'
        uses: docker/build-push-action@v3
        with:
          context: ./
          push: true
          file: ./Dockerfile
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:${{ steps.tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Tag "production" and push.
        id: docker_build_production_version
        uses: docker/build-push-action@v3
        with:
          context: ./
          push: true
          file: ./Dockerfile
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:production
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Print image digest.
        run: |
          echo ${{ steps.docker_build_staging.outputs.digest }}
          echo ${{ steps.docker_build_production.outputs.digest }}

      - name: Configure production AWS credentials.
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::${{ inputs.AWS_ACCOUNT_ID}}:role/${{ github.event.repository.name }}-production-github-role
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Update production ECS service.
        run: |
          aws ecs update-service --cluster pulse-production --service ${{ inputs.SERVICE_NAME }}-production --force-new-deployment
